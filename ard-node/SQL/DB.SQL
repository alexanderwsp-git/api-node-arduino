CREATE SCHEMA `ARD_SENSOR` DEFAULT CHARACTER SET utf8 ;


CREATE TABLE `ARD_SENSOR`.`USER` (
  `ID_USER` INT NOT NULL AUTO_INCREMENT,
  `USERNAME` VARCHAR(50) NOT NULL,
  `EMAIL` VARCHAR(250) NOT NULL,
  `NAME` VARCHAR(450) NOT NULL,
  `LAST_NAME` VARCHAR(450) NOT NULL,
  `STATUS` VARCHAR(25) NOT NULL,
  `CREATED_BY` VARCHAR(50) NOT NULL,
  `CREATED_AT` DATETIME NOT NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `MODIFIED_AT` DATETIME NULL,
  PRIMARY KEY (`ID_USER`),
  UNIQUE INDEX `ID_USER_UNIQUE` (`ID_USER` ASC) VISIBLE,
  UNIQUE INDEX `USERNAME_UNIQUE` (`USERNAME` ASC) VISIBLE,
  UNIQUE INDEX `EMAIL_UNIQUE` (`EMAIL` ASC) VISIBLE);


CREATE TABLE `ARD_SENSOR`.`ELEMENT` (
  `ID_ELEMENT` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(200) NOT NULL,
  `COLOR` VARCHAR(50) NOT NULL,
  `DESCRIPTION` VARCHAR(1000) NOT NULL,
  `NOMENCLATURA` VARCHAR(10) NOT NULL,
  `PERIODIC_NUMBER` INT NOT NULL,
  `VALUE` DOUBLE NOT NULL,
  `INIT` INT NOT NULL,
  `END` INT NOT NULL,
  `LIMIT` INT NULL,
  `NOTIFY` VARCHAR(1) NULL DEFAULT 'N',
  `STATUS` VARCHAR(25) NOT NULL,
  `CREATED_BY` VARCHAR(50) NOT NULL,
  `CREATED_AT` DATETIME NOT NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `MODIFIED_AT` DATETIME NULL,
  PRIMARY KEY (`ID_ELEMENT`),
  UNIQUE INDEX `ID_ELEMENT_UNIQUE` (`ID_ELEMENT` ASC) VISIBLE,
  INDEX `CREATED_BY_idx` (`CREATED_BY` ASC) VISIBLE,
  INDEX `MODIFIED_BY_idx` (`MODIFIED_BY` ASC) VISIBLE,
  UNIQUE INDEX `NAME_UNIQUE` (`NAME` ASC) VISIBLE,
  CONSTRAINT `CREATED_BY`
    FOREIGN KEY (`CREATED_BY`)
    REFERENCES `ARD_SENSOR`.`USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `MODIFIED_BY`
    FOREIGN KEY (`MODIFIED_BY`)
    REFERENCES `ARD_SENSOR`.`USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE `ARD_SENSOR`.`ELEMENT_HISTORY` (
  `ID_ELEMENT_HISTORY` INT NOT NULL AUTO_INCREMENT,
  `ELEMENT_ID` INT NOT NULL,
  `NAME` VARCHAR(200) NOT NULL,
  `COLOR` VARCHAR(50) NOT NULL,
  `DESCRIPTION` VARCHAR(1000) NOT NULL,
  `NOMENCLATURA` VARCHAR(10) NOT NULL,
  `PERIODIC_NUMBER` INT NOT NULL,
  `VALUE` DOUBLE NOT NULL,
  `INIT` INT NOT NULL,
  `END` INT NOT NULL,
  `LIMIT` INT NULL,
  `NOTIFY` VARCHAR(1) NULL DEFAULT 'N',
  `STATUS` VARCHAR(25) NOT NULL,
  `CREATED_BY` VARCHAR(50) NOT NULL,
  `CREATED_AT` DATETIME NOT NULL,
  `MODIFIED_BY` VARCHAR(50) NULL,
  `MODIFIED_AT` DATETIME NULL,
  PRIMARY KEY (`ID_ELEMENT_HISTORY`),
  UNIQUE INDEX `ID_ELEMENT_HISTORY_UNIQUE` (`ID_ELEMENT_HISTORY` ASC) VISIBLE,
  INDEX `ELEMENT_ID_HST_idx` (`ELEMENT_ID` ASC) VISIBLE,
  INDEX `CREATED_BY_HST_idx` (`CREATED_BY` ASC) VISIBLE,
  INDEX `MODIFIED_BY_HST_idx` (`MODIFIED_BY` ASC) VISIBLE,
  CONSTRAINT `ELEMENT_ID_HST`
    FOREIGN KEY (`ELEMENT_ID`)
    REFERENCES `ARD_SENSOR`.`ELEMENT` (`ID_ELEMENT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `CREATED_BY_HST`
    FOREIGN KEY (`CREATED_BY`)
    REFERENCES `ARD_SENSOR`.`USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `MODIFIED_BY_HST`
    FOREIGN KEY (`MODIFIED_BY`)
    REFERENCES `ARD_SENSOR`.`USER` (`USERNAME`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE `ELEMENT_EVENT` (
    `ID_ELEMENT_EVENT` INT(11) NOT NULL AUTO_INCREMENT,
    `ELEMENT_ID` INT(11) NOT NULL,
    `VALUE` DOUBLE NOT NULL,
    `CREATED_BY` VARCHAR(50) NOT NULL,
    `CREATED_AT` DATETIME NOT NULL,
    PRIMARY KEY (`ID_ELEMENT_EVENT`),
    UNIQUE KEY `ID_ELEMENT_EVENT_UNIQUE` (`ID_ELEMENT_EVENT`),
    KEY `ELEMENT_ID_EVNT_idx` (`ELEMENT_ID`),
    KEY `CREATED_BY_EVNT_idx` (`CREATED_BY`),
    CONSTRAINT `ELEMENT_ID_EVNT` FOREIGN KEY (`ELEMENT_ID`)
        REFERENCES `ELEMENT` (`ID_ELEMENT`),
    CONSTRAINT `CREATED_BY_EVNT` FOREIGN KEY (`CREATED_BY`)
        REFERENCES `USER` (`USERNAME`)
);


DROP TRIGGER IF EXISTS `ARD_SENSOR`.`TRG_ELEMENT_TO_HIST`;

DELIMITER $$
USE `ARD_SENSOR`$$
CREATE TRIGGER TRG_ELEMENT_TO_HIST
AFTER INSERT ON `ELEMENT`
FOR EACH ROW BEGIN

INSERT INTO `ARD_SENSOR`.`ELEMENT_HISTORY`
(
`ELEMENT_ID`,
`NAME`,
`COLOR`,
`DESCRIPTION`,
`NOMENCLATURA`,
`PERIODIC_NUMBER`,
`VALUE`,
`INIT`,
`END`,
`LIMIT`,
`NOTIFY`,
`STATUS`,
`CREATED_BY`,
`CREATED_AT`)
VALUES
(
NEW.`ID_ELEMENT`,
NEW.`NAME`,
NEW.`COLOR`,
NEW.`DESCRIPTION`,
NEW.`NOMENCLATURA`,
NEW.`PERIODIC_NUMBER`,
NEW.`VALUE`,
NEW.`INIT`,
NEW.`END`,
NEW.`LIMIT`,
NEW.`NOTIFY`,
NEW.`STATUS`,
NEW.`CREATED_BY`,
NEW.`CREATED_AT`);

END$$
DELIMITER ;

DROP TRIGGER IF EXISTS `ARD_SENSOR`.`TRG_ELEMENT_TO_HIST_UPDATE`;

DELIMITER $$
USE `ARD_SENSOR`$$
CREATE TRIGGER TRG_ELEMENT_TO_HIST_UPDATE
AFTER UPDATE ON `ELEMENT`
FOR EACH ROW BEGIN

INSERT INTO `ARD_SENSOR`.`ELEMENT_HISTORY`
(
`ELEMENT_ID`,
`NAME`,
`COLOR`,
`DESCRIPTION`,
`NOMENCLATURA`,
`PERIODIC_NUMBER`,
`VALUE`,
`INIT`,
`END`,
`LIMIT`,
`NOTIFY`,
`STATUS`,
`CREATED_BY`,
`CREATED_AT`,
`MODIFIED_BY`,
`MODIFIED_AT`)
VALUES
(
NEW.`ID_ELEMENT`,
NEW.`NAME`,
NEW.`COLOR`,
NEW.`DESCRIPTION`,
NEW.`NOMENCLATURA`,
NEW.`PERIODIC_NUMBER`,
NEW.`VALUE`,
NEW.`INIT`,
NEW.`END`,
NEW.`LIMIT`,
NEW.`NOTIFY`,
NEW.`STATUS`,
NEW.`CREATED_BY`,
NEW.`CREATED_AT`,
NEW.`MODIFIED_BY`,
NEW.`MODIFIED_AT`);

END$$
DELIMITER ;
